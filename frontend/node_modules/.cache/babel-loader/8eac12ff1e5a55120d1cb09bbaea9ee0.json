{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport store from './logic/store';\nimport axios from 'axios';\nexport var apiCall = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(route) {\n    var authorize,\n        method,\n        payload,\n        state,\n        server,\n        dataRoutes,\n        jwt,\n        response,\n        _args = arguments;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            authorize = _args.length > 1 && _args[1] !== undefined ? _args[1] : false;\n            method = _args.length > 2 && _args[2] !== undefined ? _args[2] : 'get';\n            payload = _args.length > 3 && _args[3] !== undefined ? _args[3] : {};\n            state = store.getState();\n            method = method.toLowerCase().trim();\n            server = 'http://127.0.0.1:5000';\n            dataRoutes = ['post', 'put'];\n            jwt = authorize ? state.jwt : undefined;\n            _context.prev = 8;\n            _context.next = 11;\n            return axios({\n              method: method,\n              url: server + route,\n              data: dataRoutes.includes(method) ? payload : undefined,\n              headers: authorize ? {\n                'Authorization': \"Bearer \".concat(jwt)\n              } : undefined\n            });\n\n          case 11:\n            response = _context.sent;\n            if (authorize) store.dispatch({\n              type: 'auth/login'\n            });\n            return _context.abrupt(\"return\", response.data);\n\n          case 16:\n            _context.prev = 16;\n            _context.t0 = _context[\"catch\"](8);\n            if (authorize) store.dispatch({\n              type: 'auth/logout'\n            });\n            throw _context.t0.response;\n\n          case 20:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[8, 16]]);\n  }));\n\n  return function apiCall(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();","map":null,"metadata":{},"sourceType":"module"}